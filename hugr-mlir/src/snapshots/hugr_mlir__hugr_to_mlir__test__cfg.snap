---
source: hugr-mlir/src/hugr_to_mlir.rs
expression: op.as_operation().to_string()
---
module {
  hugr.module {
    func @main[](%arg0: !hugr<opaque "usize"["prelude"]>) -> !hugr<opaque "usize"["prelude"]> {
      %0 = dfg input extensions [] %arg0 : (!hugr<opaque "usize"["prelude"]>) -> !hugr<opaque "usize"["prelude"]> {
      ^bb0(%arg1: !hugr<opaque "usize"["prelude"]>):
        %1 = cfg %arg1 : (!hugr<opaque "usize"["prelude"]>) -> !hugr<opaque "usize"["prelude"]> {
        ^bb0(%arg2: !hugr<opaque "usize"["prelude"]>):
          %2 = dfg input extensions [] %arg2 : (!hugr<opaque "usize"["prelude"]>) -> !hugr.sum<tuple<!hugr<opaque "usize"["prelude"]>>, tuple<!hugr<opaque "usize"["prelude"]>>> {
          ^bb0(%arg3: !hugr<opaque "usize"["prelude"]>):
            %6 = make_tuple(%arg3 : !hugr<opaque "usize"["prelude"]>)
            %7 = tag 1 %6 : tuple<!hugr<opaque "usize"["prelude"]>> -> <tuple<!hugr<opaque "usize"["prelude"]>>, tuple<!hugr<opaque "usize"["prelude"]>>>
            output %7 : !hugr.sum<tuple<!hugr<opaque "usize"["prelude"]>>, tuple<!hugr<opaque "usize"["prelude"]>>>
          }
          switch %2 : !hugr.sum<tuple<!hugr<opaque "usize"["prelude"]>>, tuple<!hugr<opaque "usize"["prelude"]>>> ^bb2, ^bb1
        ^bb1(%3: !hugr<opaque "usize"["prelude"]>):  // 2 preds: ^bb0, ^bb2
          output %3 : !hugr<opaque "usize"["prelude"]>
        ^bb2(%4: !hugr<opaque "usize"["prelude"]>):  // pred: ^bb0
          %5:2 = dfg input extensions [] %4 : (!hugr<opaque "usize"["prelude"]>) -> (!hugr.sum<tuple<>>, !hugr<opaque "usize"["prelude"]>) {
          ^bb0(%arg3: !hugr<opaque "usize"["prelude"]>):
            const @const_14 : !hugr.sum<tuple<>> = #hugr.sum<0, []> : !hugr.sum<tuple<>>
            %6 = load_constant @const_14 : !hugr.sum<tuple<>>
            output %6, %arg3 : !hugr.sum<tuple<>>, !hugr<opaque "usize"["prelude"]>
          }
          switch %5#0, %5#1 : !hugr.sum<tuple<>>, !hugr<opaque "usize"["prelude"]> ^bb1
        }
        output %1 : !hugr<opaque "usize"["prelude"]>
      }
      output %0 : !hugr<opaque "usize"["prelude"]>
    }
  }
}

