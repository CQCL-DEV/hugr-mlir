---
source: hugr-mlir/src/hugr_to_mlir.rs
expression: op.as_operation().to_string()
---
module {
  hugr.module {
    func @main["prelude"](%arg0: !hugr<opaque "usize"["prelude"]>) -> !hugr<opaque "usize"["prelude"]> {
      %0 = dfg input extensions [] %arg0 : (!hugr<opaque "usize"["prelude"]>) -> !hugr<opaque "usize"["prelude"]> {
      ^bb0(%arg1: !hugr<opaque "usize"["prelude"]>):
        %1 = lift ["prelude"] %arg1 : (!hugr<opaque "usize"["prelude"]>) -> !hugr<opaque "usize"["prelude"]>
        %2 = tailloop !hugr.sum<tuple<!hugr<opaque "usize"["prelude"]>>, tuple<!hugr<opaque "usize"["prelude"]>>>(%1 : !hugr<opaque "usize"["prelude"]>) -> (!hugr<opaque "usize"["prelude"]>) {
        ^bb0(%arg2: !hugr<opaque "usize"["prelude"]>):
          %3 = dfg input extensions [] %arg2 : (!hugr<opaque "usize"["prelude"]>) -> !hugr.sum<tuple<!hugr<opaque "usize"["prelude"]>>, tuple<!hugr<opaque "usize"["prelude"]>>> {
          ^bb0(%arg3: !hugr<opaque "usize"["prelude"]>):
            const @const_8 : !hugr.sum<tuple<>, tuple<>> = #hugr.sum<1, []> : !hugr.sum<tuple<>, tuple<>>
            %4 = load_constant @const_8 : !hugr.sum<tuple<>, tuple<>>
            %5 = lift ["prelude"] %4 : (!hugr.sum<tuple<>, tuple<>>) -> !hugr.sum<tuple<>, tuple<>>
            %6 = conditional(%5, %arg3 : !hugr.sum<tuple<>, tuple<>>, !hugr<opaque "usize"["prelude"]>) -> !hugr.sum<tuple<!hugr<opaque "usize"["prelude"]>>, tuple<!hugr<opaque "usize"["prelude"]>>> {
            ^bb0(%arg4: !hugr<opaque "usize"["prelude"]>):
              %7 = dfg input extensions [] %arg4 : (!hugr<opaque "usize"["prelude"]>) -> !hugr.sum<tuple<!hugr<opaque "usize"["prelude"]>>, tuple<!hugr<opaque "usize"["prelude"]>>> {
              ^bb0(%arg5: !hugr<opaque "usize"["prelude"]>):
                %8 = make_tuple(%arg5 : !hugr<opaque "usize"["prelude"]>)
                %9 = tag 0 %8 : tuple<!hugr<opaque "usize"["prelude"]>> -> <tuple<!hugr<opaque "usize"["prelude"]>>, tuple<!hugr<opaque "usize"["prelude"]>>>
                output %9 : !hugr.sum<tuple<!hugr<opaque "usize"["prelude"]>>, tuple<!hugr<opaque "usize"["prelude"]>>>
              }
              output %7 : !hugr.sum<tuple<!hugr<opaque "usize"["prelude"]>>, tuple<!hugr<opaque "usize"["prelude"]>>>
            }, {
            ^bb0(%arg4: !hugr<opaque "usize"["prelude"]>):
              %7 = dfg input extensions [] %arg4 : (!hugr<opaque "usize"["prelude"]>) -> !hugr.sum<tuple<!hugr<opaque "usize"["prelude"]>>, tuple<!hugr<opaque "usize"["prelude"]>>> {
              ^bb0(%arg5: !hugr<opaque "usize"["prelude"]>):
                const @const_20 : !hugr<opaque "usize"["prelude"]> = 2 : index
                %8 = load_constant @const_20 : !hugr<opaque "usize"["prelude"]>
                %9 = make_tuple(%8 : !hugr<opaque "usize"["prelude"]>)
                %10 = tag 1 %9 : tuple<!hugr<opaque "usize"["prelude"]>> -> <tuple<!hugr<opaque "usize"["prelude"]>>, tuple<!hugr<opaque "usize"["prelude"]>>>
                output %10 : !hugr.sum<tuple<!hugr<opaque "usize"["prelude"]>>, tuple<!hugr<opaque "usize"["prelude"]>>>
              }
              output %7 : !hugr.sum<tuple<!hugr<opaque "usize"["prelude"]>>, tuple<!hugr<opaque "usize"["prelude"]>>>
            }
            output %6 : !hugr.sum<tuple<!hugr<opaque "usize"["prelude"]>>, tuple<!hugr<opaque "usize"["prelude"]>>>
          }
          output %3 : !hugr.sum<tuple<!hugr<opaque "usize"["prelude"]>>, tuple<!hugr<opaque "usize"["prelude"]>>>
        }
        output %2 : !hugr<opaque "usize"["prelude"]>
      }
      output %0 : !hugr<opaque "usize"["prelude"]>
    }
  }
}

