---
source: hugr-mlir/tests/guppy_export_tests.rs
expression: mlir_mod.as_operation()
input_file: hugr-mlir/tests/guppy-exports/test_if_expr_reassign_cond.json
---
module {
  hugr.module {
    func @foo[](%arg0: !hugr.sum<tuple<>, tuple<>>) -> !hugr<opaque "int"["arithmetic.int.types"] <6 : i64>> {
      %0 = dfg input extensions [] %arg0 : (!hugr.sum<tuple<>, tuple<>>) -> !hugr<opaque "int"["arithmetic.int.types"] <6 : i64>> {
      ^bb0(%arg1: !hugr.sum<tuple<>, tuple<>>):
        %1 = cfg %arg1 : (!hugr.sum<tuple<>, tuple<>>) -> !hugr<opaque "int"["arithmetic.int.types"] <6 : i64>> {
        ^bb0(%arg2: !hugr.sum<tuple<>, tuple<>>):
          %2 = dfg input extensions [] %arg2 : (!hugr.sum<tuple<>, tuple<>>) -> !hugr.sum<tuple<!hugr<opaque "int"["arithmetic.int.types"] <6 : i64>>>, tuple<!hugr.sum<tuple<>, tuple<>>, !hugr<opaque "int"["arithmetic.int.types"] <6 : i64>>>> {
          ^bb0(%arg3: !hugr.sum<tuple<>, tuple<>>):
            const @const_29 : !hugr<opaque "int"["arithmetic.int.types"] <6 : i64>> = 5 : i6
            %16 = load_constant @const_29 : !hugr<opaque "int"["arithmetic.int.types"] <6 : i64>>
            const @const_31 : !hugr<opaque "int"["arithmetic.int.types"] <6 : i64>> = -22 : i6
            %17 = load_constant @const_31 : !hugr<opaque "int"["arithmetic.int.types"] <6 : i64>>
            const @const_33 : !hugr<opaque "int"["arithmetic.int.types"] <6 : i64>> = 5 : i6
            %18 = load_constant @const_33 : !hugr<opaque "int"["arithmetic.int.types"] <6 : i64>>
            %19 = ext_op []"igt_s" %17, %18 : (!hugr<opaque "int"["arithmetic.int.types"] <6 : i64>>, !hugr<opaque "int"["arithmetic.int.types"] <6 : i64>>) -> !hugr.sum<tuple<>, tuple<>>
            %20 = make_tuple(%17 : !hugr<opaque "int"["arithmetic.int.types"] <6 : i64>>)
            %21 = make_tuple(%arg3, %17 : !hugr.sum<tuple<>, tuple<>>, !hugr<opaque "int"["arithmetic.int.types"] <6 : i64>>)
            %22 = conditional(%19, %20, %21 : !hugr.sum<tuple<>, tuple<>>, tuple<!hugr<opaque "int"["arithmetic.int.types"] <6 : i64>>>, tuple<!hugr.sum<tuple<>, tuple<>>, !hugr<opaque "int"["arithmetic.int.types"] <6 : i64>>>) -> !hugr.sum<tuple<!hugr<opaque "int"["arithmetic.int.types"] <6 : i64>>>, tuple<!hugr.sum<tuple<>, tuple<>>, !hugr<opaque "int"["arithmetic.int.types"] <6 : i64>>>> {
            ^bb0(%arg4: tuple<!hugr<opaque "int"["arithmetic.int.types"] <6 : i64>>>, %arg5: tuple<!hugr.sum<tuple<>, tuple<>>, !hugr<opaque "int"["arithmetic.int.types"] <6 : i64>>>):
              %23 = dfg input extensions [] %arg4, %arg5 : (tuple<!hugr<opaque "int"["arithmetic.int.types"] <6 : i64>>>, tuple<!hugr.sum<tuple<>, tuple<>>, !hugr<opaque "int"["arithmetic.int.types"] <6 : i64>>>) -> !hugr.sum<tuple<!hugr<opaque "int"["arithmetic.int.types"] <6 : i64>>>, tuple<!hugr.sum<tuple<>, tuple<>>, !hugr<opaque "int"["arithmetic.int.types"] <6 : i64>>>> {
              ^bb0(%arg6: tuple<!hugr<opaque "int"["arithmetic.int.types"] <6 : i64>>>, %arg7: tuple<!hugr.sum<tuple<>, tuple<>>, !hugr<opaque "int"["arithmetic.int.types"] <6 : i64>>>):
                %24 = tag 0 %arg6 : tuple<!hugr<opaque "int"["arithmetic.int.types"] <6 : i64>>> -> <tuple<!hugr<opaque "int"["arithmetic.int.types"] <6 : i64>>>, tuple<!hugr.sum<tuple<>, tuple<>>, !hugr<opaque "int"["arithmetic.int.types"] <6 : i64>>>>
                output %24 : !hugr.sum<tuple<!hugr<opaque "int"["arithmetic.int.types"] <6 : i64>>>, tuple<!hugr.sum<tuple<>, tuple<>>, !hugr<opaque "int"["arithmetic.int.types"] <6 : i64>>>>
              }
              output %23 : !hugr.sum<tuple<!hugr<opaque "int"["arithmetic.int.types"] <6 : i64>>>, tuple<!hugr.sum<tuple<>, tuple<>>, !hugr<opaque "int"["arithmetic.int.types"] <6 : i64>>>>
            }, {
            ^bb0(%arg4: tuple<!hugr<opaque "int"["arithmetic.int.types"] <6 : i64>>>, %arg5: tuple<!hugr.sum<tuple<>, tuple<>>, !hugr<opaque "int"["arithmetic.int.types"] <6 : i64>>>):
              %23 = dfg input extensions [] %arg4, %arg5 : (tuple<!hugr<opaque "int"["arithmetic.int.types"] <6 : i64>>>, tuple<!hugr.sum<tuple<>, tuple<>>, !hugr<opaque "int"["arithmetic.int.types"] <6 : i64>>>) -> !hugr.sum<tuple<!hugr<opaque "int"["arithmetic.int.types"] <6 : i64>>>, tuple<!hugr.sum<tuple<>, tuple<>>, !hugr<opaque "int"["arithmetic.int.types"] <6 : i64>>>> {
              ^bb0(%arg6: tuple<!hugr<opaque "int"["arithmetic.int.types"] <6 : i64>>>, %arg7: tuple<!hugr.sum<tuple<>, tuple<>>, !hugr<opaque "int"["arithmetic.int.types"] <6 : i64>>>):
                %24 = tag 1 %arg7 : tuple<!hugr.sum<tuple<>, tuple<>>, !hugr<opaque "int"["arithmetic.int.types"] <6 : i64>>> -> <tuple<!hugr<opaque "int"["arithmetic.int.types"] <6 : i64>>>, tuple<!hugr.sum<tuple<>, tuple<>>, !hugr<opaque "int"["arithmetic.int.types"] <6 : i64>>>>
                output %24 : !hugr.sum<tuple<!hugr<opaque "int"["arithmetic.int.types"] <6 : i64>>>, tuple<!hugr.sum<tuple<>, tuple<>>, !hugr<opaque "int"["arithmetic.int.types"] <6 : i64>>>>
              }
              output %23 : !hugr.sum<tuple<!hugr<opaque "int"["arithmetic.int.types"] <6 : i64>>>, tuple<!hugr.sum<tuple<>, tuple<>>, !hugr<opaque "int"["arithmetic.int.types"] <6 : i64>>>>
            }
            output %22 : !hugr.sum<tuple<!hugr<opaque "int"["arithmetic.int.types"] <6 : i64>>>, tuple<!hugr.sum<tuple<>, tuple<>>, !hugr<opaque "int"["arithmetic.int.types"] <6 : i64>>>>
          }
          switch %2 : !hugr.sum<tuple<!hugr<opaque "int"["arithmetic.int.types"] <6 : i64>>>, tuple<!hugr.sum<tuple<>, tuple<>>, !hugr<opaque "int"["arithmetic.int.types"] <6 : i64>>>> ^bb2, ^bb3
        ^bb1(%3: !hugr<opaque "int"["arithmetic.int.types"] <6 : i64>>):  // pred: ^bb4
          output %3 : !hugr<opaque "int"["arithmetic.int.types"] <6 : i64>>
        ^bb2(%4: !hugr<opaque "int"["arithmetic.int.types"] <6 : i64>>):  // pred: ^bb0
          %5:2 = dfg input extensions [] %4 : (!hugr<opaque "int"["arithmetic.int.types"] <6 : i64>>) -> (!hugr.sum<tuple<>>, !hugr<opaque "int"["arithmetic.int.types"] <6 : i64>>) {
          ^bb0(%arg3: !hugr<opaque "int"["arithmetic.int.types"] <6 : i64>>):
            %16 = make_tuple()
            %17 = tag 0 %16 : tuple<> -> <tuple<>>
            output %17, %arg3 : !hugr.sum<tuple<>>, !hugr<opaque "int"["arithmetic.int.types"] <6 : i64>>
          }
          switch %5#0, %5#1 : !hugr.sum<tuple<>>, !hugr<opaque "int"["arithmetic.int.types"] <6 : i64>> ^bb4
        ^bb3(%6: !hugr.sum<tuple<>, tuple<>>, %7: !hugr<opaque "int"["arithmetic.int.types"] <6 : i64>>):  // pred: ^bb0
          %8 = dfg input extensions [] %6, %7 : (!hugr.sum<tuple<>, tuple<>>, !hugr<opaque "int"["arithmetic.int.types"] <6 : i64>>) -> !hugr.sum<tuple<>, tuple<!hugr<opaque "int"["arithmetic.int.types"] <6 : i64>>>> {
          ^bb0(%arg3: !hugr.sum<tuple<>, tuple<>>, %arg4: !hugr<opaque "int"["arithmetic.int.types"] <6 : i64>>):
            %16 = make_tuple()
            %17 = make_tuple(%arg4 : !hugr<opaque "int"["arithmetic.int.types"] <6 : i64>>)
            %18 = conditional(%arg3, %16, %17 : !hugr.sum<tuple<>, tuple<>>, tuple<>, tuple<!hugr<opaque "int"["arithmetic.int.types"] <6 : i64>>>) -> !hugr.sum<tuple<>, tuple<!hugr<opaque "int"["arithmetic.int.types"] <6 : i64>>>> {
            ^bb0(%arg5: tuple<>, %arg6: tuple<!hugr<opaque "int"["arithmetic.int.types"] <6 : i64>>>):
              %19 = dfg input extensions [] %arg5, %arg6 : (tuple<>, tuple<!hugr<opaque "int"["arithmetic.int.types"] <6 : i64>>>) -> !hugr.sum<tuple<>, tuple<!hugr<opaque "int"["arithmetic.int.types"] <6 : i64>>>> {
              ^bb0(%arg7: tuple<>, %arg8: tuple<!hugr<opaque "int"["arithmetic.int.types"] <6 : i64>>>):
                %20 = tag 0 %arg7 : tuple<> -> <tuple<>, tuple<!hugr<opaque "int"["arithmetic.int.types"] <6 : i64>>>>
                output %20 : !hugr.sum<tuple<>, tuple<!hugr<opaque "int"["arithmetic.int.types"] <6 : i64>>>>
              }
              output %19 : !hugr.sum<tuple<>, tuple<!hugr<opaque "int"["arithmetic.int.types"] <6 : i64>>>>
            }, {
            ^bb0(%arg5: tuple<>, %arg6: tuple<!hugr<opaque "int"["arithmetic.int.types"] <6 : i64>>>):
              %19 = dfg input extensions [] %arg5, %arg6 : (tuple<>, tuple<!hugr<opaque "int"["arithmetic.int.types"] <6 : i64>>>) -> !hugr.sum<tuple<>, tuple<!hugr<opaque "int"["arithmetic.int.types"] <6 : i64>>>> {
              ^bb0(%arg7: tuple<>, %arg8: tuple<!hugr<opaque "int"["arithmetic.int.types"] <6 : i64>>>):
                %20 = tag 1 %arg8 : tuple<!hugr<opaque "int"["arithmetic.int.types"] <6 : i64>>> -> <tuple<>, tuple<!hugr<opaque "int"["arithmetic.int.types"] <6 : i64>>>>
                output %20 : !hugr.sum<tuple<>, tuple<!hugr<opaque "int"["arithmetic.int.types"] <6 : i64>>>>
              }
              output %19 : !hugr.sum<tuple<>, tuple<!hugr<opaque "int"["arithmetic.int.types"] <6 : i64>>>>
            }
            output %18 : !hugr.sum<tuple<>, tuple<!hugr<opaque "int"["arithmetic.int.types"] <6 : i64>>>>
          }
          switch %8 : !hugr.sum<tuple<>, tuple<!hugr<opaque "int"["arithmetic.int.types"] <6 : i64>>>> ^bb5, ^bb6
        ^bb4(%9: !hugr<opaque "int"["arithmetic.int.types"] <6 : i64>>):  // 2 preds: ^bb2, ^bb7
          %10:2 = dfg input extensions [] %9 : (!hugr<opaque "int"["arithmetic.int.types"] <6 : i64>>) -> (!hugr.sum<tuple<>>, !hugr<opaque "int"["arithmetic.int.types"] <6 : i64>>) {
          ^bb0(%arg3: !hugr<opaque "int"["arithmetic.int.types"] <6 : i64>>):
            %16 = make_tuple()
            %17 = tag 0 %16 : tuple<> -> <tuple<>>
            output %17, %arg3 : !hugr.sum<tuple<>>, !hugr<opaque "int"["arithmetic.int.types"] <6 : i64>>
          }
          switch %10#0, %10#1 : !hugr.sum<tuple<>>, !hugr<opaque "int"["arithmetic.int.types"] <6 : i64>> ^bb1
        ^bb5:  // pred: ^bb3
          %11:2 = dfg input extensions []  : () -> (!hugr.sum<tuple<>>, !hugr<opaque "int"["arithmetic.int.types"] <6 : i64>>) {
            const @const_58 : !hugr<opaque "int"["arithmetic.int.types"] <6 : i64>> = 0 : i6
            %16 = load_constant @const_58 : !hugr<opaque "int"["arithmetic.int.types"] <6 : i64>>
            %17 = make_tuple()
            %18 = tag 0 %17 : tuple<> -> <tuple<>>
            output %18, %16 : !hugr.sum<tuple<>>, !hugr<opaque "int"["arithmetic.int.types"] <6 : i64>>
          }
          switch %11#0, %11#1 : !hugr.sum<tuple<>>, !hugr<opaque "int"["arithmetic.int.types"] <6 : i64>> ^bb7
        ^bb6(%12: !hugr<opaque "int"["arithmetic.int.types"] <6 : i64>>):  // pred: ^bb3
          %13:2 = dfg input extensions [] %12 : (!hugr<opaque "int"["arithmetic.int.types"] <6 : i64>>) -> (!hugr.sum<tuple<>>, !hugr<opaque "int"["arithmetic.int.types"] <6 : i64>>) {
          ^bb0(%arg3: !hugr<opaque "int"["arithmetic.int.types"] <6 : i64>>):
            %16 = make_tuple()
            %17 = tag 0 %16 : tuple<> -> <tuple<>>
            output %17, %arg3 : !hugr.sum<tuple<>>, !hugr<opaque "int"["arithmetic.int.types"] <6 : i64>>
          }
          switch %13#0, %13#1 : !hugr.sum<tuple<>>, !hugr<opaque "int"["arithmetic.int.types"] <6 : i64>> ^bb7
        ^bb7(%14: !hugr<opaque "int"["arithmetic.int.types"] <6 : i64>>):  // 2 preds: ^bb5, ^bb6
          %15:2 = dfg input extensions [] %14 : (!hugr<opaque "int"["arithmetic.int.types"] <6 : i64>>) -> (!hugr.sum<tuple<>>, !hugr<opaque "int"["arithmetic.int.types"] <6 : i64>>) {
          ^bb0(%arg3: !hugr<opaque "int"["arithmetic.int.types"] <6 : i64>>):
            %16 = make_tuple()
            %17 = tag 0 %16 : tuple<> -> <tuple<>>
            output %17, %arg3 : !hugr.sum<tuple<>>, !hugr<opaque "int"["arithmetic.int.types"] <6 : i64>>
          }
          switch %15#0, %15#1 : !hugr.sum<tuple<>>, !hugr<opaque "int"["arithmetic.int.types"] <6 : i64>> ^bb4
        }
        output %1 : !hugr<opaque "int"["arithmetic.int.types"] <6 : i64>>
      }
      output %0 : !hugr<opaque "int"["arithmetic.int.types"] <6 : i64>>
    }
  }
}

