---
source: tests/guppy_export_tests.rs
expression: m.as_operation()
input_file: tests/guppy-exports/test_return_call.json
---
module {
  hugr.func @test[](%arg0: !hugr<opaque "qubit"["prelude"] [Linear]>) -> !hugr<opaque "qubit"["prelude"] [Linear]> {
    %0 = cfg %arg0 : (!hugr<opaque "qubit"["prelude"] [Linear]>) -> !hugr<opaque "qubit"["prelude"] [Linear]> {
    ^bb0(%arg1: !hugr<opaque "qubit"["prelude"] [Linear]>):
      %1 = call @op  [](!hugr<opaque "qubit"["prelude"] [Linear]>) -> !hugr<opaque "qubit"["prelude"] [Linear]> %arg1
      %2 = make_tuple()
      %3 = tag 0 %2 : tuple<> -> <tuple<>>
      switch %3, %1 : !hugr.sum<tuple<>>, !hugr<opaque "qubit"["prelude"] [Linear]> ^bb1
    ^bb1(%4: !hugr<opaque "qubit"["prelude"] [Linear]>):  // pred: ^bb0
      output %4 : !hugr<opaque "qubit"["prelude"] [Linear]>
    }
    output %0 : !hugr<opaque "qubit"["prelude"] [Linear]>
  }
  hugr.func @op[](!hugr<opaque "qubit"["prelude"] [Linear]>) -> !hugr<opaque "qubit"["prelude"] [Linear]>
}

